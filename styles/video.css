.thumbnail {
  /* Now, these dimensions will cause our image to streach or shrink a little if these are not our image's original dimensions.*/
  width: 100%;
  /* height: 300px; */

  /* Images have there own properties */

  /* This property will force our image to cover the whole described dimensions */
  /* object-fit: cover; */

  /* To view the left side of the image within our dimensions */
  /* object-position: left; */

  /* It will  force the image to fit in our specified dimensions without changing it's own dimensions.*/
  /* object-fit: contain; */

}

.video-title {
  margin-top: 0;
  font-size: 14px;
  font-weight: 500;
  line-height: 20px;
  margin-bottom: 10px;
}

/* Display Property of CSS  */

/* In html there are three type of elements:
      1- Block elements
              they will take the entire line of a page by default. e.g. paragraphs
      2- Inline-block element
              they will only take the required space by default.
      3- Inline Elements e.g images
              these appears within a line of text by default.
              e.g text elements like bold, span etc.*/
/* Changing block elements to inline-block elements. */
/* .video-author, .video-stats {
  display: inline-block;
} */

/* Now here we know that paragraphs are by default block elements but in this case there container is not the whole web page, but the div they are in, so they will take the whole line just in that div space. That's a very useful feature of divs. */
/* .video-preview {

} */

.video-info-grid {
  display: grid;
  grid-template-columns: 50px 1fr;
}

/* .chanel-picture {
  display: inline-block;
  width: 50px;
  vertical-align: top;
}

.video-info {
  display: inline-block;
  width: 200px;
} */

.profile-picture {
  /* width: 50px; */
  /* to set the width of an image exactly to it's container: */
  /* width: 100%; */

  width: 36px;
  /* so it will go with the dimensions of its container.*/

  border-radius: 50px;
}

.thumbnail-row {
  margin-bottom: 8px;
  position: relative;

}

.video-stats, .video-author {
  font-size:  12px;
  color: rgb(96, 96, 96);
}

.video-author {
  margin-bottom: 5px;
} 


.video-grid {

  /* Inheritance */
  /* Certain properties most likely text properties will pass down to innner elements from the outer most element. */

  /* text-decoration: underlined; */

  /* Now we can use this inheritance to our benefit as giving the outer most element i.e. the grid our font stack so that all the inner elements inherit it and we do not have to specify our font stack for each element. */

  /* font-family: Roboto, Arial; */

  /* Going furthur if we want to set the text of our whole page to one font stack we can use inheritance and target the whole body.*/

  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  column-gap: 16px;
  row-gap: 40px;
}

/* To Create a Basic Responsive Design: */

@media (max-width: 750px) {
  .video-grid {
    grid-template-columns:  1fr 1fr;
  }
}

@media (min-width: 751px) and (max-width: 999px){
  .video-grid {
    grid-template-columns:  1fr 1fr 1fr;
  }
}

@media (min-width: 1000px) {
  .video-grid {
    grid-template-columns:  1fr 1fr 1fr 1fr;
  }
}

.video-time {
  font-family: Roboto, Arial;
  font-size: 12px;
  font-weight: 500;
  background-color: black;
  color: white;
  position: absolute;
  bottom: 10px;
  right: 8px;
  
  /* padding-left: 4px;
  padding-right: 4px;
  padding-top: 4px;
  padding-bottom: 4px; */

  /* Clockwise: top, right, bottom and left */
  /* paddig: 4px 4px 4px 4px*/

  /* vertical padding (top and bottom) horizontal padding (left and right) */
  /* padding:  4px 4px; */

  padding: 4px;

  border-radius: 2px;
}
